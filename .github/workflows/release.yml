# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Create release.

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build_win:
    name: Create Windows wheels.
    
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
    
      - name: Install OpenCL dependencies
        run: choco install opencl-intel-cpu-runtime
    
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          pip install wheel twine
          
      - name: Compile inplace
          pip install -e .
    
      - name: Publishing
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run:
          python setup.py bdist_wheel
          twine upload --repository testpypi dist/*
          
  build_manylinux2010:
    name: Create manylinux2010 wheels.
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Build (manylinux2010)
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
        build-requirements: 'pybind11 numpy pyarrow'
        system-packages: 'opencl-headers ocl-icd ocl-icd-devel'
        pip-wheel-args: '-w ./dist --no-deps'
        
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
        
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        pip install wheel twine
        
    - name: Publishing
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run:
        python setup.py bdist_wheel
        twine upload --repository testpypi dist/*
